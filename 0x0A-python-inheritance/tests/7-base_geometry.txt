"""
testing the Mylist module
"""
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> doc_s1 = __import__("7-base_geometry").__doc__
>>> len(doc_s) > 1
True
>>> doc_s2 = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(doc_s) > 1
True
>>> doc_mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(doc_mod1) > 1
True
>>> doc_mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(doc_mod2) > 1
True



>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("integer")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("integer", 1, 2)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given
