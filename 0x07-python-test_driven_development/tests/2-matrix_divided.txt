"""
function to divide all elements in a matrix with parameter div
if div is not an int or float, raise TypeError
if matrix is not list, raise TypeError
if matrix is not list of list, raise TypeError
if div is 0, raise ZeroDivisionError
if length of the inner lists are not the same, raise TypeError
"""
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[2, 4, 7], [8, 4, 10]], 'i')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[2, 4, 7], 8, [4, 10]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix(list of lists) of integers/floats

>>> matrix_divided([[2, 'i', 7], [8, 4, 10]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix(list of lists) of integers/floats

>>> matrix_divided([[2, 4, 7], [8, 4, 10]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[2, 4, 7], [8, 4, 10, 12]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]